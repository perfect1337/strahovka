{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jopa\\\\GolandProjects\\\\front\\\\insurance-frontend\\\\src\\\\pages\\\\Insurance\\\\NewPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Stepper, Step, StepLabel, Button, Grid, TextField, MenuItem, FormControl, InputLabel, Select, FormHelperText, Alert } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Select Policy Type', 'Enter Details', 'Review & Submit'];\nconst policyTypes = [{\n  id: 'auto',\n  name: 'Auto Insurance',\n  description: 'Comprehensive coverage for your vehicle',\n  fields: [{\n    name: 'vehicleMake',\n    label: 'Vehicle Make',\n    type: 'text'\n  }, {\n    name: 'vehicleModel',\n    label: 'Vehicle Model',\n    type: 'text'\n  }, {\n    name: 'year',\n    label: 'Year',\n    type: 'number'\n  }, {\n    name: 'licensePlate',\n    label: 'License Plate',\n    type: 'text'\n  }]\n}, {\n  id: 'home',\n  name: 'Home Insurance',\n  description: 'Protection for your home and belongings',\n  fields: [{\n    name: 'address',\n    label: 'Property Address',\n    type: 'text'\n  }, {\n    name: 'propertyType',\n    label: 'Property Type',\n    type: 'select',\n    options: ['House', 'Apartment', 'Condo']\n  }, {\n    name: 'squareFootage',\n    label: 'Square Footage',\n    type: 'number'\n  }, {\n    name: 'yearBuilt',\n    label: 'Year Built',\n    type: 'number'\n  }]\n}, {\n  id: 'health',\n  name: 'Health Insurance',\n  description: 'Comprehensive health coverage',\n  fields: [{\n    name: 'coverageType',\n    label: 'Coverage Type',\n    type: 'select',\n    options: ['Basic', 'Standard', 'Premium']\n  }, {\n    name: 'familyMembers',\n    label: 'Number of Family Members',\n    type: 'number'\n  }, {\n    name: 'preExistingConditions',\n    label: 'Pre-existing Conditions',\n    type: 'text'\n  }]\n}, {\n  id: 'life',\n  name: 'Life Insurance',\n  description: 'Financial protection for your loved ones',\n  fields: [{\n    name: 'coverageAmount',\n    label: 'Coverage Amount',\n    type: 'number'\n  }, {\n    name: 'termLength',\n    label: 'Term Length (years)',\n    type: 'number'\n  }, {\n    name: 'beneficiaries',\n    label: 'Number of Beneficiaries',\n    type: 'number'\n  }]\n}];\nconst NewPolicy = () => {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      policyType: '',\n      startDate: '',\n      duration: '12',\n      ...policyTypes.reduce((acc, type) => {\n        type.fields.forEach(field => {\n          acc[field.name] = '';\n        });\n        return acc;\n      }, {})\n    },\n    validationSchema: Yup.object({\n      policyType: Yup.string().required('Policy type is required'),\n      startDate: Yup.date().required('Start date is required'),\n      duration: Yup.number().required('Duration is required')\n    }),\n    onSubmit: async values => {\n      try {\n        const response = await axios.post('/api/policies', values);\n        navigate('/policies');\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create policy');\n      }\n    }\n  });\n  const handleNext = () => {\n    if (activeStep === steps.length - 1) {\n      formik.handleSubmit();\n    } else {\n      setActiveStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  const getStepContent = step => {\n    var _policyTypes$find, _policyTypes$find2;\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: policyTypes.map(type => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                cursor: 'pointer',\n                border: formik.values.policyType === type.id ? 2 : 1,\n                borderColor: formik.values.policyType === type.id ? 'primary.main' : 'divider'\n              },\n              onClick: () => formik.setFieldValue('policyType', type.id),\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: type.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      case 1:\n        const selectedPolicy = policyTypes.find(type => type.id === formik.values.policyType);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              label: \"Start Date\",\n              name: \"startDate\",\n              value: formik.values.startDate,\n              onChange: formik.handleChange,\n              error: formik.touched.startDate && Boolean(formik.errors.startDate),\n              helperText: formik.touched.startDate && formik.errors.startDate,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Duration (months)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"duration\",\n                value: formik.values.duration,\n                onChange: formik.handleChange,\n                label: \"Duration (months)\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"12\",\n                  children: \"12 months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"24\",\n                  children: \"24 months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"36\",\n                  children: \"36 months\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), selectedPolicy === null || selectedPolicy === void 0 ? void 0 : selectedPolicy.fields.map(field => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: field.type === 'select' ? /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: field.name,\n                value: formik.values[field.name],\n                onChange: formik.handleChange,\n                label: field.label,\n                children: field.options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option,\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: field.label,\n              name: field.name,\n              type: field.type,\n              value: formik.values[field.name],\n              onChange: formik.handleChange,\n              error: formik.touched[field.name] && Boolean(formik.errors[field.name]),\n              helperText: formik.touched[field.name] && formik.errors[field.name]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, field.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Review Your Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [\"Policy Type: \", (_policyTypes$find = policyTypes.find(type => type.id === formik.values.policyType)) === null || _policyTypes$find === void 0 ? void 0 : _policyTypes$find.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [\"Start Date: \", formik.values.startDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [\"Duration: \", formik.values.duration, \" months\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), (_policyTypes$find2 = policyTypes.find(type => type.id === formik.values.policyType)) === null || _policyTypes$find2 === void 0 ? void 0 : _policyTypes$find2.fields.map(field => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [field.label, \": \", formik.values[field.name]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)\n            }, field.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this);\n      default:\n        return 'Unknown step';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"New Insurance Policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        sx: {\n          mb: 4\n        },\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), getStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 3\n        },\n        children: [activeStep !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBack,\n          sx: {\n            mr: 1\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleNext,\n          disabled: activeStep === 0 && !formik.values.policyType,\n          children: activeStep === steps.length - 1 ? 'Submit' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPolicy, \"Np/w/Yk7WGT8rqm0pHywqI+gorw=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = NewPolicy;\nexport default NewPolicy;\nvar _c;\n$RefreshReg$(_c, \"NewPolicy\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Paper","Typography","Stepper","Step","StepLabel","Button","Grid","TextField","MenuItem","FormControl","InputLabel","Select","FormHelperText","Alert","useFormik","Yup","axios","jsxDEV","_jsxDEV","steps","policyTypes","id","name","description","fields","label","type","options","NewPolicy","_s","activeStep","setActiveStep","error","setError","navigate","formik","initialValues","policyType","startDate","duration","reduce","acc","forEach","field","validationSchema","object","string","required","date","number","onSubmit","values","response","post","err","_err$response","_err$response$data","data","message","handleNext","length","handleSubmit","prevStep","handleBack","getStepContent","step","_policyTypes$find","_policyTypes$find2","container","spacing","children","map","item","xs","sm","md","sx","p","cursor","border","borderColor","onClick","setFieldValue","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","selectedPolicy","find","fullWidth","value","onChange","handleChange","touched","Boolean","errors","helperText","InputLabelProps","shrink","option","maxWidth","mx","severity","mb","display","justifyContent","mt","mr","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jopa/GolandProjects/front/insurance-frontend/src/pages/Insurance/NewPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  FormHelperText,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst steps = ['Select Policy Type', 'Enter Details', 'Review & Submit'];\r\n\r\nconst policyTypes = [\r\n  {\r\n    id: 'auto',\r\n    name: 'Auto Insurance',\r\n    description: 'Comprehensive coverage for your vehicle',\r\n    fields: [\r\n      { name: 'vehicleMake', label: 'Vehicle Make', type: 'text' },\r\n      { name: 'vehicleModel', label: 'Vehicle Model', type: 'text' },\r\n      { name: 'year', label: 'Year', type: 'number' },\r\n      { name: 'licensePlate', label: 'License Plate', type: 'text' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'home',\r\n    name: 'Home Insurance',\r\n    description: 'Protection for your home and belongings',\r\n    fields: [\r\n      { name: 'address', label: 'Property Address', type: 'text' },\r\n      { name: 'propertyType', label: 'Property Type', type: 'select', options: ['House', 'Apartment', 'Condo'] },\r\n      { name: 'squareFootage', label: 'Square Footage', type: 'number' },\r\n      { name: 'yearBuilt', label: 'Year Built', type: 'number' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'health',\r\n    name: 'Health Insurance',\r\n    description: 'Comprehensive health coverage',\r\n    fields: [\r\n      { name: 'coverageType', label: 'Coverage Type', type: 'select', options: ['Basic', 'Standard', 'Premium'] },\r\n      { name: 'familyMembers', label: 'Number of Family Members', type: 'number' },\r\n      { name: 'preExistingConditions', label: 'Pre-existing Conditions', type: 'text' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'life',\r\n    name: 'Life Insurance',\r\n    description: 'Financial protection for your loved ones',\r\n    fields: [\r\n      { name: 'coverageAmount', label: 'Coverage Amount', type: 'number' },\r\n      { name: 'termLength', label: 'Term Length (years)', type: 'number' },\r\n      { name: 'beneficiaries', label: 'Number of Beneficiaries', type: 'number' },\r\n    ],\r\n  },\r\n];\r\n\r\nconst NewPolicy = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      policyType: '',\r\n      startDate: '',\r\n      duration: '12',\r\n      ...policyTypes.reduce((acc, type) => {\r\n        type.fields.forEach((field) => {\r\n          acc[field.name] = '';\r\n        });\r\n        return acc;\r\n      }, {}),\r\n    },\r\n    validationSchema: Yup.object({\r\n      policyType: Yup.string().required('Policy type is required'),\r\n      startDate: Yup.date().required('Start date is required'),\r\n      duration: Yup.number().required('Duration is required'),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const response = await axios.post('/api/policies', values);\r\n        navigate('/policies');\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Failed to create policy');\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === steps.length - 1) {\r\n      formik.handleSubmit();\r\n    } else {\r\n      setActiveStep((prevStep) => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Grid container spacing={3}>\r\n            {policyTypes.map((type) => (\r\n              <Grid item xs={12} sm={6} md={4} key={type.id}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    cursor: 'pointer',\r\n                    border: formik.values.policyType === type.id ? 2 : 1,\r\n                    borderColor: formik.values.policyType === type.id ? 'primary.main' : 'divider',\r\n                  }}\r\n                  onClick={() => formik.setFieldValue('policyType', type.id)}\r\n                >\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {type.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {type.description}\r\n                  </Typography>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        );\r\n\r\n      case 1:\r\n        const selectedPolicy = policyTypes.find(\r\n          (type) => type.id === formik.values.policyType\r\n        );\r\n        return (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"date\"\r\n                label=\"Start Date\"\r\n                name=\"startDate\"\r\n                value={formik.values.startDate}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.startDate && Boolean(formik.errors.startDate)}\r\n                helperText={formik.touched.startDate && formik.errors.startDate}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Duration (months)</InputLabel>\r\n                <Select\r\n                  name=\"duration\"\r\n                  value={formik.values.duration}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Duration (months)\"\r\n                >\r\n                  <MenuItem value=\"12\">12 months</MenuItem>\r\n                  <MenuItem value=\"24\">24 months</MenuItem>\r\n                  <MenuItem value=\"36\">36 months</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {selectedPolicy?.fields.map((field) => (\r\n              <Grid item xs={12} md={6} key={field.name}>\r\n                {field.type === 'select' ? (\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>{field.label}</InputLabel>\r\n                    <Select\r\n                      name={field.name}\r\n                      value={formik.values[field.name]}\r\n                      onChange={formik.handleChange}\r\n                      label={field.label}\r\n                    >\r\n                      {field.options.map((option) => (\r\n                        <MenuItem key={option} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                ) : (\r\n                  <TextField\r\n                    fullWidth\r\n                    label={field.label}\r\n                    name={field.name}\r\n                    type={field.type}\r\n                    value={formik.values[field.name]}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched[field.name] &&\r\n                      Boolean(formik.errors[field.name])\r\n                    }\r\n                    helperText={\r\n                      formik.touched[field.name] && formik.errors[field.name]\r\n                    }\r\n                  />\r\n                )}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Review Your Policy\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle1\">\r\n                  Policy Type: {policyTypes.find((type) => type.id === formik.values.policyType)?.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle1\">\r\n                  Start Date: {formik.values.startDate}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle1\">\r\n                  Duration: {formik.values.duration} months\r\n                </Typography>\r\n              </Grid>\r\n              {policyTypes\r\n                .find((type) => type.id === formik.values.policyType)\r\n                ?.fields.map((field) => (\r\n                  <Grid item xs={12} key={field.name}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      {field.label}: {formik.values[field.name]}\r\n                    </Typography>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          </Box>\r\n        );\r\n\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          New Insurance Policy\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n\r\n        {getStepContent(activeStep)}\r\n\r\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\r\n          {activeStep !== 0 && (\r\n            <Button onClick={handleBack} sx={{ mr: 1 }}>\r\n              Back\r\n            </Button>\r\n          )}\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === 0 && !formik.values.policyType}\r\n          >\r\n            {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewPolicy; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}