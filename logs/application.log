2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 18:47:57 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:47:57 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 18:47:57 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:02 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-29 18:48:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-29 18:48:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-29 18:48:06 [main] INFO  com.strahovka.StrahovkaApplication - Starting StrahovkaApplication using Java 23.0.2 with PID 6420 (C:\Users\jopa\IdeaProjects\strahovka\back\target\classes started by jopa in C:\Users\jopa\IdeaProjects\strahovka)
2025-05-29 18:48:06 [main] DEBUG com.strahovka.StrahovkaApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-05-29 18:48:06 [main] INFO  com.strahovka.StrahovkaApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-29 18:48:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-29 18:48:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 16 JPA repository interfaces.
2025-05-29 18:48:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-05-29 18:48:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 18:48:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-05-29 18:48:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 18:48:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1564 ms
2025-05-29 18:48:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-29 18:48:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@342a1f84
2025-05-29 18:48:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-29 18:48:08 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-05-29 18:48:08 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-05-29 18:48:08 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-05-29 18:48:08 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/strahovka (PostgreSQL 17.4)
2025-05-29 18:48:08 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.4 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-05-29 18:48:08 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 62
2025-05-29 18:48:08 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-05-29 18:48:08 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-05-29 18:48:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-29 18:48:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-29 18:48:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-29 18:48:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-29 18:48:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-29 18:48:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@5a5a973c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@15c96f24)
2025-05-29 18:48:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24482a4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3140ad41)
2025-05-29 18:48:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-29 18:48:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-29 18:48:10 [main] DEBUG c.s.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-29 18:48:10 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-05-29 18:48:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-29 18:48:11 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 77 mappings in 'requestMappingHandlerMapping'
2025-05-29 18:48:11 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-05-29 18:48:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-29 18:48:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@403ca4ec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17bda3, org.springframework.security.web.context.SecurityContextHolderFilter@3fc0a2c, org.springframework.security.web.header.HeaderWriterFilter@7a845f91, org.springframework.web.filter.CorsFilter@465b16bb, org.springframework.security.web.authentication.logout.LogoutFilter@6dbf042, com.strahovka.security.JwtAuthenticationFilter@233202aa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@530cfb27, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19e78fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45e1d6a5, org.springframework.security.web.session.SessionManagementFilter@8862881, org.springframework.security.web.access.ExceptionTranslationFilter@34692767, org.springframework.security.web.access.intercept.AuthorizationFilter@14aeb8e6]
2025-05-29 18:48:12 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-05-29 18:48:12 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-05-29 18:48:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path ''
2025-05-29 18:48:12 [main] INFO  com.strahovka.StrahovkaApplication - Started StrahovkaApplication in 6.093 seconds (process running for 6.639)
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@38c61ab
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3a95898c
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-05-29 18:48:12 [RMI TCP Connection(2)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:48:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:48:16 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.AuthController#login(Map)
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{email=pupa@gmail.com, password=pupa@gmail.com}]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        access_token=?,
        email=?,
        first_name=?,
        last_name=?,
        level=?,
        middle_name=?,
        password=?,
        phone=?,
        policy_count=?,
        refresh_token=?,
        role=? 
    where
        id=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, accessToken=eyJhbGciOiJIUzUx (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 18:48:18 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 18:48:18 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/insurance/applications/osago/13/pay
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/insurance/applications/osago/13/pay
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/insurance/applications/osago/13/pay", parameters={}
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#processOsagoPayment(Long, Authentication)
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.processOsagoPayment(java.lang.Long,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.processOsagoPayment(java.lang.Long,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:20 [http-nio-8081-exec-7] INFO  c.s.s.InsuranceApplicationService - Processing OSAGO payment for application ID: 13 and user: pupa@gmail.com
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    left join
        users u1_0 
            on u1_0.id=oa1_0.user_id 
    where
        oa1_0.id=? 
        and u1_0.id=?
2025-05-29 18:48:20 [http-nio-8081-exec-7] INFO  c.s.s.InsuranceApplicationService - Found application with status: PENDING
2025-05-29 18:48:20 [http-nio-8081-exec-7] ERROR c.s.s.InsuranceApplicationService - No policy found for application ID: 13
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json]
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["No policy found for this application"]
2025-05-29 18:48:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/claims/user?page=0&size=10
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/claims/user?page=0&size=10
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies", parameters={}
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getUserPolicies()
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/claims/user?page=0&size=10", parameters={masked}
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserClaims()
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.calculated_amount,
        ic1_0.claim_date,
        ic1_0.created_at,
        ic1_0.description,
        ic1_0.policy_id,
        ic1_0.processed_at,
        ic1_0.processed_by,
        ic1_0.response,
        ic1_0.response_date,
        ic1_0.status 
    from
        insurance_claims ic1_0 
    left join
        insurance_policies p1_0 
            on p1_0.id=ic1_0.policy_id 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        u1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceClaim(id=10, policy=InsurancePolicy(id=23, name=КАСКО - audi rs, description=Страховой пол (truncated)...]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/claims/user?page=0&size=10
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies", parameters={}
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getUserPolicies()
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/claims/user?page=0&size=10
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/claims/user?page=0&size=10", parameters={masked}
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserClaims()
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.calculated_amount,
        ic1_0.claim_date,
        ic1_0.created_at,
        ic1_0.description,
        ic1_0.policy_id,
        ic1_0.processed_at,
        ic1_0.processed_by,
        ic1_0.response,
        ic1_0.response_date,
        ic1_0.status 
    from
        insurance_claims ic1_0 
    left join
        insurance_policies p1_0 
            on p1_0.id=ic1_0.policy_id 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        u1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 18:48:22 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceClaim(id=10, policy=InsurancePolicy(id=23, name=КАСКО - audi rs, description=Страховой пол (truncated)...]
2025-05-29 18:48:22 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:48:23 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 18:48:23 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 18:48:23 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/insurance/applications/osago
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/insurance/applications/osago
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/insurance/applications/osago", parameters={}
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#createOsagoApplication(OsagoApplication, Authentication)
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [OsagoApplication(carMake=432, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrati (truncated)...]
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.createOsagoApplication(com.strahovka.delivery.OsagoApplication,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.createOsagoApplication(com.strahovka.delivery.OsagoApplication,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 18:48:48 [http-nio-8081-exec-10] INFO  c.s.s.InsuranceApplicationService - Creating OSAGO application for user: pupa@gmail.com
2025-05-29 18:48:48 [http-nio-8081-exec-10] INFO  c.s.s.InsuranceApplicationService - Calculated base rate: 5400.00
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.name=?
2025-05-29 18:48:48 [http-nio-8081-exec-10] INFO  c.s.s.InsuranceApplicationService - Found OSAGO category: ОСАГО
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        insurance_policies
        (active, cashback, category_id, description, details, end_date, guide_id, policy_name, price, start_date, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-29 18:48:48 [http-nio-8081-exec-10] INFO  c.s.s.InsuranceApplicationService - Saved policy with ID: 27
2025-05-29 18:48:48 [http-nio-8081-exec-10] INFO  c.s.s.InsuranceApplicationService - Linked policy 27 to application
2025-05-29 18:48:48 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        osago_applications
        (application_date, calculated_amount, car_make, car_model, car_year, driver_experience_years, driver_license_number, engine_power, has_accidents_last_year, license_plate, notes, policy_id, previous_policy_number, processed_at, processed_by, region_registration, registration_certificate, status, user_id, vin_number) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-29 18:48:48 [http-nio-8081-exec-10] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42804
2025-05-29 18:48:48 [http-nio-8081-exec-10] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ОШИБКА: столбец "status" имеет тип application_status, а выражение - character varying
  Подсказка: Перепишите выражение или преобразуйте его тип.
  Позиция: 397
2025-05-29 18:48:49 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement [ОШИБКА: столбец "status" имеет тип application_status, а выражение - character varying
  Подсказка: Перепишите выражение или преобразуйте его тип.
  Позиция: 397] [insert into osago_applications (application_date,calculated_amount,car_make,car_model,car_year,driver_experience_years,driver_license_number,engine_power,has_accidents_last_year,license_plate,notes,policy_id,previous_policy_number,processed_at,processed_by,region_registration,registration_certificate,status,user_id,vin_number) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into osago_applications (application_date,calculated_amount,car_make,car_model,car_year,driver_experience_years,driver_license_number,engine_power,has_accidents_last_year,license_plate,notes,policy_id,previous_policy_number,processed_at,processed_by,region_registration,registration_certificate,status,user_id,vin_number) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
2025-05-29 18:51:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-29 18:51:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-29 18:51:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-05-29 19:01:07 [main] INFO  com.strahovka.StrahovkaApplication - Starting StrahovkaApplication using Java 23.0.2 with PID 25220 (C:\Users\jopa\IdeaProjects\strahovka\back\target\classes started by jopa in C:\Users\jopa\IdeaProjects\strahovka)
2025-05-29 19:01:07 [main] DEBUG com.strahovka.StrahovkaApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-05-29 19:01:07 [main] INFO  com.strahovka.StrahovkaApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-29 19:01:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-29 19:01:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 16 JPA repository interfaces.
2025-05-29 19:01:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8081 (http)
2025-05-29 19:01:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-29 19:01:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-05-29 19:01:09 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-29 19:01:09 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1341 ms
2025-05-29 19:01:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-05-29 19:01:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@356341c9
2025-05-29 19:01:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-05-29 19:01:09 [main] INFO  o.f.c.i.license.VersionPrinter - Flyway Community Edition 9.22.3 by Redgate
2025-05-29 19:01:09 [main] INFO  o.f.c.i.license.VersionPrinter - See release notes here: https://rd.gt/416ObMi
2025-05-29 19:01:09 [main] INFO  o.f.c.i.license.VersionPrinter - 
2025-05-29 19:01:09 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/strahovka (PostgreSQL 17.4)
2025-05-29 19:01:09 [main] WARN  o.f.c.i.database.base.Database - Flyway upgrade recommended: PostgreSQL 17.4 is newer than this version of Flyway and support has not been tested. The latest supported version of PostgreSQL is 15.
2025-05-29 19:01:09 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 62
2025-05-29 19:01:09 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-05-29 19:01:09 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-05-29 19:01:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-29 19:01:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-29 19:01:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-29 19:01:10 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-29 19:01:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-29 19:01:10 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2003, org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@67e628b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.ArrayDdlTypeImpl@578c99ac)
2025-05-29 19:01:10 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ca30886) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bf16972)
2025-05-29 19:01:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-29 19:01:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-29 19:01:11 [main] DEBUG c.s.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-29 19:01:11 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-05-29 19:01:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-29 19:01:12 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 77 mappings in 'requestMappingHandlerMapping'
2025-05-29 19:01:12 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-05-29 19:01:12 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2025-05-29 19:01:12 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@61c0a61, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66121af9, org.springframework.security.web.context.SecurityContextHolderFilter@4b2164a9, org.springframework.security.web.header.HeaderWriterFilter@ee9b7ac, org.springframework.web.filter.CorsFilter@62a153d3, org.springframework.security.web.authentication.logout.LogoutFilter@4916619e, com.strahovka.security.JwtAuthenticationFilter@38f12596, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bafb3bd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@41576e84, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3b21f625, org.springframework.security.web.session.SessionManagementFilter@5775485, org.springframework.security.web.access.ExceptionTranslationFilter@3bbd9232, org.springframework.security.web.access.intercept.AuthorizationFilter@6ced9545]
2025-05-29 19:01:12 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-05-29 19:01:12 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-05-29 19:01:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8081 (http) with context path ''
2025-05-29 19:01:12 [main] INFO  com.strahovka.StrahovkaApplication - Started StrahovkaApplication in 5.569 seconds (process running for 6.056)
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@596690e5
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@117bb3a4
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-05-29 19:01:13 [RMI TCP Connection(2)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.AuthController#login(Map)
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{email=pupa@gmail.com, password=pupa@gmail.com}]
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        access_token=?,
        email=?,
        first_name=?,
        last_name=?,
        level=?,
        middle_name=?,
        password=?,
        phone=?,
        policy_count=?,
        refresh_token=?,
        role=? 
    where
        id=?
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, accessToken=eyJhbGciOiJIUzUx (truncated)...]
2025-05-29 19:01:16 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 19:01:17 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:01:17 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 19:01:17 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:18 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/insurance/applications/osago/13/pay
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/insurance/applications/osago/13/pay
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/insurance/applications/osago/13/pay
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/insurance/applications/osago/13/pay", parameters={}
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#processOsagoPayment(Long, Authentication)
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.processOsagoPayment(java.lang.Long,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.processOsagoPayment(java.lang.Long,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:18 [http-nio-8081-exec-9] INFO  c.s.s.InsuranceApplicationService - Processing OSAGO payment for application ID: 13 and user: pupa@gmail.com
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    left join
        users u1_0 
            on u1_0.id=oa1_0.user_id 
    where
        oa1_0.id=? 
        and u1_0.id=?
2025-05-29 19:01:18 [http-nio-8081-exec-9] INFO  c.s.s.InsuranceApplicationService - Found application with status: PENDING
2025-05-29 19:01:18 [http-nio-8081-exec-9] ERROR c.s.s.InsuranceApplicationService - No policy found for application ID: 13
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [text/plain, */*, application/json, application/*+json]
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["No policy found for this application"]
2025-05-29 19:01:18 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/claims/user?page=0&size=10
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies", parameters={}
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getUserPolicies()
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/claims/user?page=0&size=10
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/claims/user?page=0&size=10", parameters={masked}
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserClaims()
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.calculated_amount,
        ic1_0.claim_date,
        ic1_0.created_at,
        ic1_0.description,
        ic1_0.policy_id,
        ic1_0.processed_at,
        ic1_0.processed_by,
        ic1_0.response,
        ic1_0.response_date,
        ic1_0.status 
    from
        insurance_claims ic1_0 
    left join
        insurance_policies p1_0 
            on p1_0.id=ic1_0.policy_id 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        u1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:01:20 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceClaim(id=10, policy=InsurancePolicy(id=23, name=КАСКО - audi rs, description=Страховой пол (truncated)...]
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies", parameters={}
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getUserPolicies()
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/claims/user?page=0&size=10
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceController.getUserPolicies(); target is of class [com.strahovka.controller.InsuranceController]
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/claims/user?page=0&size=10
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/claims/user?page=0&size=10", parameters={masked}
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserClaims()
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserClaims(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.calculated_amount,
        ic1_0.claim_date,
        ic1_0.created_at,
        ic1_0.description,
        ic1_0.policy_id,
        ic1_0.processed_at,
        ic1_0.processed_by,
        ic1_0.response,
        ic1_0.response_date,
        ic1_0.status 
    from
        insurance_claims ic1_0 
    left join
        insurance_policies p1_0 
            on p1_0.id=ic1_0.policy_id 
    left join
        users u1_0 
            on u1_0.id=p1_0.user_id 
    where
        u1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:01:20 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.claim_id,
        a1_0.id,
        a1_0.created_at,
        a1_0.file_data,
        a1_0.file_name,
        a1_0.file_size,
        a1_0.file_type 
    from
        claim_attachments a1_0 
    where
        a1_0.claim_id=?
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceClaim(id=10, policy=InsurancePolicy(id=23, name=КАСКО - audi rs, description=Страховой пол (truncated)...]
2025-05-29 19:01:20 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/packages/public
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/packages/public
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/packages/public", parameters={}
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePackageController#getPublicPackages()
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.baseprice,
        ip1_0.description,
        ip1_0.discount,
        ip1_0.name 
    from
        insurance_packages ip1_0 
    where
        ip1_0.active
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/categories
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePackage(id=3, name=каско + осаго, description=каско + осаго скидка, basePrice=250.00, disc (truncated)...]
2025-05-29 19:01:24 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/categories
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/categories", parameters={}
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceController#getAllCategories()
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsuranceCategory(id=1, name=КАСКО, description=Добровольное страхование автомобиля, basePrice=5000 (truncated)...]
2025-05-29 19:01:24 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/insurance/applications/osago
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/insurance/applications/osago
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/insurance/applications/osago", parameters={}
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#createOsagoApplication(OsagoApplication, Authentication)
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [OsagoApplication(carMake=423, carModel=423, carYear=4423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.createOsagoApplication(com.strahovka.delivery.OsagoApplication,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.createOsagoApplication(com.strahovka.delivery.OsagoApplication,org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:01:46 [http-nio-8081-exec-2] INFO  c.s.s.InsuranceApplicationService - Creating OSAGO application for user: pupa@gmail.com
2025-05-29 19:01:46 [http-nio-8081-exec-2] INFO  c.s.s.InsuranceApplicationService - Calculated base rate: 5400.00
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.name=?
2025-05-29 19:01:46 [http-nio-8081-exec-2] INFO  c.s.s.InsuranceApplicationService - Found OSAGO category: ОСАГО
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        insurance_policies
        (active, cashback, category_id, description, details, end_date, guide_id, policy_name, price, start_date, status, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-29 19:01:46 [http-nio-8081-exec-2] INFO  c.s.s.InsuranceApplicationService - Saved policy with ID: 28
2025-05-29 19:01:46 [http-nio-8081-exec-2] INFO  c.s.s.InsuranceApplicationService - Linked policy 28 to application
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        osago_applications
        (application_date, calculated_amount, car_make, car_model, car_year, driver_experience_years, driver_license_number, engine_power, has_accidents_last_year, license_plate, notes, policy_id, previous_policy_number, processed_at, processed_by, region_registration, registration_certificate, status, user_id, vin_number) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-29 19:01:46 [http-nio-8081-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 42804
2025-05-29 19:01:46 [http-nio-8081-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - ОШИБКА: столбец "status" имеет тип application_status, а выражение - character varying
  Подсказка: Перепишите выражение или преобразуйте его тип.
  Позиция: 397
2025-05-29 19:01:46 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute statement [ОШИБКА: столбец "status" имеет тип application_status, а выражение - character varying
  Подсказка: Перепишите выражение или преобразуйте его тип.
  Позиция: 397] [insert into osago_applications (application_date,calculated_amount,car_make,car_model,car_year,driver_experience_years,driver_license_number,engine_power,has_accidents_last_year,license_plate,notes,policy_id,previous_policy_number,processed_at,processed_by,region_registration,registration_certificate,status,user_id,vin_number) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into osago_applications (application_date,calculated_amount,car_make,car_model,car_year,driver_experience_years,driver_license_number,engine_power,has_accidents_last_year,license_plate,notes,policy_id,previous_policy_number,processed_at,processed_by,region_registration,registration_certificate,status,user_id,vin_number) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.AuthController#login(Map)
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{email=pupa@gmail.com, password=pupa@gmail.com}]
2025-05-29 19:02:11 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        access_token=?,
        email=?,
        first_name=?,
        last_name=?,
        level=?,
        middle_name=?,
        password=?,
        phone=?,
        policy_count=?,
        refresh_token=?,
        role=? 
    where
        id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, accessToken=eyJhbGciOiJIUzUx (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/profile
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/osago
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/health
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/travel
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/health
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/profile
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/health", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserHealthApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/osago
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/osago", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/profile", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserOsagoApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserHealthApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.UserController#getProfile(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserOsagoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:02:12 [http-nio-8081-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.UserController.getProfile(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.UserController]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG org.hibernate.SQL - 
    select
        ha1_0.id,
        ha1_0.application_date,
        ha1_0.birth_date,
        ha1_0.calculated_amount,
        ha1_0.chronic_diseases_details,
        ha1_0.cover_dental,
        ha1_0.cover_emergency,
        ha1_0.cover_maternity,
        ha1_0.cover_vision,
        ha1_0.disabilities_details,
        ha1_0.family_doctor_needed,
        ha1_0.has_chronic_diseases,
        ha1_0.has_disabilities,
        ha1_0.notes,
        ha1_0.passport_number,
        ha1_0.preferred_clinic,
        ha1_0.processed_at,
        ha1_0.processed_by,
        ha1_0.smoking_status,
        ha1_0.snils,
        ha1_0.status,
        ha1_0.user_id 
    from
        health_applications ha1_0 
    where
        ha1_0.user_id=? 
    order by
        ha1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/policies/user
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{firstName=art, lastName=em, role=ROLE_USER, level=GOLD, policyCount=4, email=pupa@gmail.com}]
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG org.hibernate.SQL - 
    select
        oa1_0.id,
        oa1_0.application_date,
        oa1_0.calculated_amount,
        oa1_0.car_make,
        oa1_0.car_model,
        oa1_0.car_year,
        oa1_0.driver_experience_years,
        oa1_0.driver_license_number,
        oa1_0.engine_power,
        oa1_0.has_accidents_last_year,
        oa1_0.license_plate,
        oa1_0.notes,
        oa1_0.policy_id,
        oa1_0.previous_policy_number,
        oa1_0.processed_at,
        oa1_0.processed_by,
        oa1_0.region_registration,
        oa1_0.registration_certificate,
        oa1_0.status,
        oa1_0.user_id,
        oa1_0.vin_number 
    from
        osago_applications oa1_0 
    where
        oa1_0.user_id=? 
    order by
        oa1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/travel
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/property
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/travel", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserTravelApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserTravelApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[OsagoApplication(carMake=423, carModel=423, carYear=423, vinNumber=423, licensePlate=423, registrat (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/insurance/applications/user/kasko
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG org.hibernate.SQL - 
    select
        ta1_0.id,
        ta1_0.application_date,
        ta1_0.calculated_amount,
        ta1_0.cover_accidents,
        ta1_0.cover_luggage,
        ta1_0.cover_medical_expenses,
        ta1_0.cover_sports_activities,
        ta1_0.cover_trip_cancellation,
        ta1_0.destination_country,
        ta1_0.has_chronic_diseases,
        ta1_0.notes,
        ta1_0.passport_expiry,
        ta1_0.passport_number,
        ta1_0.planned_sports_activities,
        ta1_0.processed_at,
        ta1_0.processed_by,
        ta1_0.purpose_of_trip,
        ta1_0.status,
        ta1_0.travel_end_date,
        ta1_0.travel_start_date,
        ta1_0.user_id 
    from
        travel_applications ta1_0 
    where
        ta1_0.user_id=? 
    order by
        ta1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/policies/user
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/policies/user", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsurancePolicyController#getUserPolicies()
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsurancePolicyController.getUserPolicies(); target is of class [com.strahovka.controller.InsurancePolicyController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/property
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/property", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserPropertyApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserPropertyApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        ip1_0.guide_id,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id 
    from
        insurance_policies ip1_0 
    where
        ip1_0.user_id=? 
    order by
        ip1_0.start_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/insurance/applications/user/kasko
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        ic1_0.id,
        ic1_0.base_price,
        ic1_0.description,
        ic1_0.name,
        ic1_0.type 
    from
        insurance_categories ic1_0 
    where
        ic1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/insurance/applications/user/kasko", parameters={}
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.strahovka.controller.InsuranceApplicationController#getUserKaskoApplications(Authentication)
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.strahovka.controller.InsuranceApplicationController.getUserKaskoApplications(org.springframework.security.core.Authentication); target is of class [com.strahovka.controller.InsuranceApplicationController]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG org.hibernate.SQL - 
    select
        pa1_0.id,
        pa1_0.address,
        pa1_0.application_date,
        pa1_0.cadastral_number,
        pa1_0.calculated_amount,
        pa1_0.construction_type,
        pa1_0.cover_natural_disasters,
        pa1_0.cover_theft,
        pa1_0.cover_third_party_liability,
        pa1_0.has_fire_alarm,
        pa1_0.has_mortage,
        pa1_0.has_security_system,
        pa1_0.mortage_bank,
        pa1_0.notes,
        pa1_0.ownership_document_number,
        pa1_0.processed_at,
        pa1_0.processed_by,
        pa1_0.property_area,
        pa1_0.property_type,
        pa1_0.property_value,
        pa1_0.status,
        pa1_0.user_id,
        pa1_0.year_built 
    from
        property_applications pa1_0 
    where
        pa1_0.user_id=? 
    order by
        pa1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ka1_0.id,
        ka1_0.application_date,
        ka1_0.approved_at,
        ka1_0.approved_by,
        ka1_0.calculated_amount,
        ka1_0.car_make,
        ka1_0.car_model,
        ka1_0.car_value,
        ka1_0.car_year,
        ka1_0.driver_experience_years,
        ka1_0.driver_license_number,
        ka1_0.duration,
        ka1_0.garage_parking,
        ka1_0.has_anti_theft_system,
        ka1_0.license_plate,
        ka1_0.notes,
        ka1_0.policy_id,
        ka1_0.previous_insurance_number,
        ka1_0.processed_at,
        ka1_0.processed_by,
        ka1_0.rejected_at,
        ka1_0.rejected_by,
        ka1_0.rejection_reason,
        ka1_0.status,
        ka1_0.user_id,
        ka1_0.vin_number 
    from
        kasko_applications ka1_0 
    where
        ka1_0.user_id=? 
    order by
        ka1_0.application_date desc
2025-05-29 19:02:12 [http-nio-8081-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[InsurancePolicy(id=26, name=КАСКО - цйу йуц, description=Страховой полис КАСКО для автомобиля цйу й (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        ip1_0.id,
        ip1_0.active,
        ip1_0.cashback,
        ip1_0.category_id,
        c1_0.id,
        c1_0.base_price,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        ip1_0.description,
        ip1_0.details,
        ip1_0.end_date,
        g1_0.id,
        g1_0.active,
        g1_0.coverage_details,
        g1_0.created_at,
        g1_0.description,
        g1_0.display_order,
        g1_0.important_notes,
        g1_0.insurance_type,
        g1_0.required_documents,
        g1_0.title,
        g1_0.updated_at,
        ip1_0.policy_name,
        ip1_0.price,
        ip1_0.start_date,
        ip1_0.status,
        ip1_0.user_id,
        u1_0.id,
        u1_0.access_token,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.level,
        u1_0.middle_name,
        u1_0.password,
        u1_0.phone,
        u1_0.policy_count,
        u1_0.refresh_token,
        u1_0.role 
    from
        insurance_policies ip1_0 
    join
        insurance_categories c1_0 
            on c1_0.id=ip1_0.category_id 
    left join
        insurance_guides g1_0 
            on g1_0.id=ip1_0.guide_id 
    join
        users u1_0 
            on u1_0.id=ip1_0.user_id 
    where
        ip1_0.id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.category_id,
        p1_1.id,
        p1_1.active,
        p1_1.baseprice,
        p1_1.description,
        p1_1.discount,
        p1_1.name 
    from
        package_categories p1_0 
    join
        insurance_packages p1_1 
            on p1_1.id=p1_0.package_id 
    where
        p1_0.category_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.package_id,
        c1_1.id,
        c1_1.base_price,
        c1_1.description,
        c1_1.name,
        c1_1.type 
    from
        package_categories c1_0 
    join
        insurance_categories c1_1 
            on c1_1.id=c1_0.category_id 
    where
        c1_0.package_id=?
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[KaskoApplication(id=14, user=User(id=46, firstName=art, lastName=em, middleName=null, phone=null, e (truncated)...]
2025-05-29 19:02:12 [http-nio-8081-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-05-29 19:04:32 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-05-29 19:04:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-05-29 19:04:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
